apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-service-deployment
  namespace: shopmicro
  labels:
    app.kubernetes.io/name: ml-service
    app.kubernetes.io/component: ml
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-service
        app.kubernetes.io/component: ml
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3002"
        prometheus.io/path: "/api/metrics"
    spec:
      containers:
      - name: ml-service
        image: shopmicro-ml-service:v1.2
        imagePullPolicy: Never
        ports:
        - containerPort: 3002
          name: http
        env:
        - name: OTEL_SERVICE_NAME
          value: "shopmicro-ml-service"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://tempo:4318"
        - name: OTEL_PYTHON_AUTO_INSTRUMENTATION_ENABLED
          value: "true"
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: shopmicro-config
              key: ML_FLASK_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: shopmicro-config
              key: ML_PORT
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: BACKEND_URL
          valueFrom:
            configMapKeyRef:
              name: shopmicro-config
              key: BACKEND_URL
        resources:
          requests:
            memory: "512Mi" 
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "300m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3002
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000  # app user from Dockerfile
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ml-service
  namespace: shopmicro
  labels:
    app.kubernetes.io/name: ml-service
    app.kubernetes.io/component: ml
spec:
  selector:
    app.kubernetes.io/name: ml-service
  ports:
  - port: 3002
    targetPort: 3002
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ml-service-hpa
  namespace: shopmicro
  labels:
    app.kubernetes.io/name: ml-service
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ml-service-deployment
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80